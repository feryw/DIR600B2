#!/bin/sh
case "$1" in
save)
	/etc/scripts/misc/profile.sh put
	;;
init)
	LANMAC=`echo -e $2 | tr [A-Z] [a-z]`
	WANMAC=`echo -e $3 | tr [A-Z] [a-z]`
	HWREV=`echo -e $4 | tr [a-z] [A-Z]`
	CCODE="$5"
	PIN="$6"
	SN="$7"
	[ "$LANMAC" != "" ] && DEVDATA="$DEVDATA -e lanmac=$LANMAC -e wlanmac=$LANMAC"
	[ "$WANMAC" != "" ] && DEVDATA="$DEVDATA -e wanmac=$WANMAC"
	[ "$CCODE" = "" ] && CCODE=840
	[ "$PIN" != "" ] && DEVDATA="$DEVDATA -e pin=$PIN"
	[ "$SN" != "" ] && DEVDATA="$DEVDATA -e sn=$SN"
	echo "devdata set -e countrycode=$CCODE -e hwrev=$HWREV $DEVDATA -f" > /dev/console
	devdata set -e countrycode=$CCODE -e hwrev=$HWREV $DEVDATA -f
	# Save wireless MAC address to EEPROM
	M1=`echo $LANMAC | cut -d: -f1`
	M2=`echo $LANMAC | cut -d: -f2`
	M3=`echo $LANMAC | cut -d: -f3`
	M4=`echo $LANMAC | cut -d: -f4`
	M5=`echo $LANMAC | cut -d: -f5`
	M6=`echo $LANMAC | cut -d: -f6`
	iwpriv ra0 e2p 04=$M2$M1
	iwpriv ra0 e2p 06=$M4$M3
	iwpriv ra0 e2p 08=$M6$M5
	# Set the RFIC type and Tx/Rx path to EEPROM.
	#iwpriv ra0 e2p 34=0122
	# Set the LED behavior to EEPROM.
	#iwpriv ra0 e2p 3a=0123
	#iwpriv ra0 e2p 3e=ff99
	#iwpriv ra0 e2p 40=ffff
	# Set MAC Address and IP Address for Uboot.
	ubcfg set ethaddr=$LANMAC ipaddr=`xmldbc -g /lan/ethernet/ip`
	;;
evm)
	if [ $# -ne 9 ]; then
		echo "usage:"
		echo "  mfc evm ATETXMODE ATETXMCS ATECHANNEL ATETXLEN ATETXBW ATETXFREQOFFSET ATETXPOW0 ATETXPOW1"
		exit 1
	fi
	iwpriv ra0 set ATE=ATESTART
	iwpriv ra0 set ATETXMODE=$2
	iwpriv ra0 set ATETXMCS=$3
	iwpriv ra0 set ATECHANNEL=$4
	iwpriv ra0 set ATETXLEN=$5
	iwpriv ra0 set ATETXBW=$6
	iwpriv ra0 set ATETXCNT=1000000000000
	iwpriv ra0 set ATETXFREQOFFSET=$7
	iwpriv ra0 set ATETXPOW0=$8
	iwpriv ra0 set ATETXPOW1=$9
	iwpriv ra0 set ATE=TXFRAME
	;;
wlan)
	rgdb -s /wireless/enable 1
	rgdb -s /wireless/ssid "$2"
	rgdb -s /wireless/channel "$3"
	rgdb -s /wireless/authtype 0
	rgdb -s /wireless/encrypttype 0
	rgdb -s /wireless/autochannel 0
	/etc/templates/wlan.sh restart
	;;
dump)
	devdata dump
	;;
ver)
	/etc/scripts/misc/ver.sh
	;;
get_hw_rev)
	devdata get -e hwrev
	;;
get_wan_mac)
	devdata get -e wanmac
	;;
get_lan_mac)
	devdata get -e lanmac
	;;
get_wlan_mac)
	devdata get -e wlanmac
	;;
get_country_code)
	devdata get -e countrycode
	;;
set_country_code)
	devdata set -e countrycode=$2
	;;
get_pin)
	devdata get -e pin
	;;
get_wlan)
	SSID=`rgdb -g /wireless/ssid`
	CHANNEL=`rgdb -g /wireless/channel`
	echo "SSID=$SSID"
	echo "Channel=$CHANNEL"
	;;
set_appex)
	devdata set -e rev0=$2 -e rev1=$2 -e rev2=$2 -e rev3=$2 -e rev4=$2 -e rev5=$2 -e rev6=$2 -e rev7=$2	
	;;
get_appex)
	REV0=`devdata get -e rev0`
	REV1=`devdata get -e rev1`
	REV2=`devdata get -e rev2`
	REV3=`devdata get -e rev3`
	REV4=`devdata get -e rev4`
	REV5=`devdata get -e rev5`
	REV6=`devdata get -e rev6`
	REV7=`devdata get -e rev7`
	echo $REV0 $REV1 $REV2 $REV3 $REV4 $REV5 $REV6 $REV7
	;;
set_11n)
	case $2 in
	disable)
		devdata set -e bgonly=1
		;;
	enable)
		devdata del -e bgonly
		;;
	esac
	;;
get_11n)
	BGONLY=`devdata get -e bgonly`
	if [ "$BGONLY" = "1" ]; then
		echo "disable"
	else
		echo "enable"
	fi
	;;
set_ssid_key)
        devdata set -e ssid="$2"
        devdata set -e key="$3"
        ;;
freset)
	case $2 in
	enable)
		fresetd &
		;;
	disable)
		killall fresetd
		;;
	"")
		/etc/scripts/misc/profile.sh reset
		/etc/scripts/misc/profile.sh put
		;;
	esac
	;;
test_led_button)
	case "$2" in
	start)
		killall fresetd
		fresetd -t &
		;;
	stop)
		killall fresetd
		fresetd &
		;;
	esac
	;;
button)
	case $2 in
	reset)
		echo TODO !!! > /dev/console
		;;
	wps)
		echo TODO !!! > /dev/console
		;;
	esac
	;;
led)
	case "$2" in
	wps_blue)
		usockc /var/run/fresetd_unixsock TEST_LED_WPS_BLUE
		;;
#	wps_red)
#		usockc /var/run/fresetd_unixsock TEST_LED_WPS_RED
#		;;
	status_green)
		usockc /var/run/fresetd_unixsock TEST_LED_STATUS_GREEN
		;;
	status_orange)
		usockc /var/run/fresetd_unixsock TEST_LED_STATUS_ORG
		;;
	inet_green)
		usockc /var/run/fresetd_unixsock TEST_LED_INET_GREEN
		;;
	inet_orange)
		usockc /var/run/fresetd_unixsock TEST_LED_INET_ORG
		;;
	off)
		usockc /var/run/fresetd_unixsock TEST_LED_OFF
		;;
	esac
	;;
eeprom)
	case $2 in
	write)
		addr37_36=`iwpriv ra0 e2p 36`
		addr37_1=`echo $addr37_36|cut -d: -f 3|cut -c 3`
		addr37_2=`echo $addr37_36|cut -d: -f 3|cut -c 4`
		addr37=$addr37_1$addr37_2
		addr37_36=$addr37"04"
		iwpriv ra0 e2p 36=$addr37_36
		iwpriv ra0 e2p DE=8888
		iwpriv ra0 e2p E0=99AA
		iwpriv ra0 e2p E2=8899
		iwpriv ra0 e2p E4=8888
		iwpriv ra0 e2p E6=8888
		iwpriv ra0 e2p E8=8888
		iwpriv ra0 e2p EA=8888
		iwpriv ra0 e2p EC=8888
		iwpriv ra0 e2p EE=8888
		mfc eeprom show
		;;
	show)
		addr="36 DE DF E0 E1 E2 E3 E4 E5 E6 E7 E8 E9 EA EB EC ED EE EF" 
		for i in $addr; do 
			var1=`iwpriv ra0 e2p $i`; 
			var2=`echo $var1|cut -d: -f 3|cut -c 5`; 
			var3=`echo $var1|cut -d: -f 3|cut -c 6`; 
			echo 0x$i = $var2$var3;
		done
		;;
	esac
	;;
*)
	echo "Usage: mfc {command} <params>"
	echo "Commands:"
	echo "  init <lanmac> <wanmac> <hwrev> <countrycode> <pin> <serialnumber>"
	echo "                                Init flash"
	echo "  save                          Save current setting to flash"
	echo ""
	echo "  evm <ATETXMODE> <ATETXMCS> <ATECHANNEL> <ATETXLEN> <ATETXBW> <ATETXFREQOFFSET> <ATETXPOW0> <ATETXPOW1>"
	echo "                                burn the ATE wireless parameters in to the EEPROM"
	echo ""
	echo "  wlan <ssid> <channel>         switch ssid and channel"
	echo "  dump                          Dump environment vairables."
	echo "  ver                           Show firmware version"
	echo ""
	echo "  get_hw_rev                    Get H/W revision"
	echo "  get_wan_mac                   Get current WAN mac address"
	echo "  get_lan_mac                   Get current LAN mac address"
	echo "  get_wlan_mac                  Get current WLAN mac address"
	echo "  get_country_code              Get current country code"
	echo "  set_country_code              Set current country code"
	echo "  get_wlan                      Get current WLAN SSID and Channel"
	echo "  get_pin                       Get PIN"
#	echo "  set_appex                     set appex value"
#	echo "  get_appex                     get appex value"
	echo "  set_11n {enable|disable}      Enable/disable 802.11n mode."
	echo "  get_11n                       Get 802.11n enabled or disabled."
	echo "  set_ssid_key <SSID> <KEY>     Set default WLAN SSID and KEY."
	echo ""
	echo "  freset                        Factory reset"
	echo "  freset {enable|disable}       Enable/disable factory reset button."
	echo "                                Note: You need to disable freset before button/led test."
	echo "  test_led_button {start|stop}  Start/Stop to test teh LEDs and Buttons."
	echo "                                Note: You need to start it before doing the led/button test."
	echo ""
#	echo "  button {reset|wps}"
#	echo "      reset                Get factory reset button status."
#	echo "      wps                  Get WPS button status."
#	echo ""
	echo "  led {off|wps_blue|wps_red|status_green|status_orange|inet_green|inet_orange}"
	echo "      off                      Turn off all the leds under test."
	echo "      wps_blue                 Turn on WPS blue led."
#	echo "      wps_red                  Turn on WPS red led."
	echo "      status_green             Turn on power/status green led."
	echo "      status_orange            Turn on power/status orange led."
	echo "      inet_green               Turn on internet green led."
	echo "      inet_orange              Turn on internet orange led."
	echo ""
	echo "  eeprom {write|show}"
	echo "      write                    Modify some values in the EEPROM"
	echo "      show                     Show some values in the EEPROM"
	;;
esac
